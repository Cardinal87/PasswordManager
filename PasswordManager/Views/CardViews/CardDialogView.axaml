<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:PasswordManager.ViewModels.CardViewModels"
			 xmlns:local="using:PasswordManager.Views.CardViews"
			 mc:Ignorable="d" d:DesignWidth="525" d:DesignHeight="450"
			 Width="500" Height="450"
			 CanResize="False"
			 x:Class="PasswordManager.Views.CardViews.CardDialogView"
			 x:DataType="vm:CardDialogViewModel"
			 
			 ExtendClientAreaToDecorationsHint="True"
			 ExtendClientAreaChromeHints="Default"
			 ExtendClientAreaTitleBarHeightHint="25"
			 WindowStartupLocation="CenterOwner">
	<Window.Styles>
		<Style Selector="CaptionButtons /template/ Button#PART_MinimizeButton">
			<Setter Property="IsVisible" Value="False"/>
		</Style>
		<Style Selector="CaptionButtons /template/ Button#PART_RestoreButton">
			<Setter Property="IsVisible" Value="False"/>
		</Style>
		<Style Selector="CaptionButtons /template/ Button#PART_CloseButton">
			<Setter Property="Background" Value="{DynamicResource AdditionalBackgroundBrush}"/>
			<Style Selector="^:pointerover">
				<Setter Property="Background" Value="{DynamicResource CloseButtonHighLightedBrush}"/>
			</Style>
			<Style Selector="^:pressed">
				<Setter Property="Background" Value="{DynamicResource CloseButtonHighLightedBrush}"/>
			</Style>
		</Style>

		<Style Selector="ComboBoxItem">
			<Setter Property="Background" Value="{DynamicResource MainBackgroundBrush}"/>
			<Setter Property="Opacity" Value="0.9"/>
			<Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Background" Value="{DynamicResource ComboBoxItemHighLightedBrush}"/>
			</Style>
			
		</Style>

		<Style Selector="ComboBox">
			<Setter Property="BorderBrush" Value="{DynamicResource DataBoxBorderBrush}"/>
			<Setter Property="Background" Value="{DynamicResource MainBackgroundBrush}"/>
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="MaxDropDownHeight" Value="120"/>
			<Style Selector="^ /template/ ScrollViewer">
				<Setter Property="Background" Value="{DynamicResource MainBackgroundBrush}" />
			</Style>

		</Style>
	</Window.Styles>


	<Border PointerPressed="MoveWindow" KeyDown="QuickCloseDialog" Padding="0" Focusable="True" x:Name="MainBorder"
			BorderThickness="1" BorderBrush="{DynamicResource DataBoxBorderBrush}">
		<Grid RowDefinitions="55,*,50">


			<DockPanel Grid.Row="0" Background="{DynamicResource AdditionalBackgroundBrush}" x:Name="ShowName" IsVisible="True">
				<TextBlock Text="{Binding Name, Converter={StaticResource StringToDefaultConverter}, ConverterParameter=NewCard}"
						   Foreground="{DynamicResource FontBrush}" DockPanel.Dock="Left" VerticalAlignment="Center"
						   Margin="20,0,0,0"
						   MaxWidth="400"/>
				<Button Background="#1b2026" Margin="5,0,0,0"
						DockPanel.Dock="Left" Theme="{StaticResource ChangeButton}"
						HorizontalAlignment="Left" Click="ShowSetNameTemplate" />

			</DockPanel>
			<DockPanel Grid.Row="0" Background="{DynamicResource AdditionalBackgroundBrush}" x:Name="SetName" IsVisible="False">
				<Button Margin="15,0,15,1" Theme="{StaticResource DismissButton}"
						DockPanel.Dock="Right" Padding="3" Click="CloseTemplate"/>
				<Button Margin="10,0,5,1" Theme="{StaticResource CheckmarkButton}" x:Name="ConfirmNameButton"
						DockPanel.Dock="Right" Click="ConfirmName"/>
				<StackPanel  Margin="15,11,0,0">
					<TextBox Watermark="Name" Foreground="{DynamicResource FontBrush}" x:Name="NameBox"
							 DockPanel.Dock="Right" VerticalAlignment="Center"
							 Background="{DynamicResource DataBoxBackgroundBrush}" BorderThickness="0"
							 Classes="dataBox" CornerRadius="5" TextChanged="NameChanged"
							 KeyDown="QuickConfirmName"/>
					<TextBlock Text="Name should be filled" Foreground="{DynamicResource WarningBrush}" FontSize="10"
							   Margin="5,0,0,0" IsVisible="False" x:Name="NameWarning"/>
				</StackPanel>


			</DockPanel>
			<Grid Grid.Row="1" ShowGridLines="True" Background="{DynamicResource MainBackgroundBrush}">
				
				<DockPanel VerticalAlignment="Top"
						   Margin="35,15,25,0">
					<TextBlock Text="Owner" Foreground="White" VerticalAlignment="Center"/>
					<TextBox Watermark="Enter owner" Margin="15,0,15,0" BorderThickness="1"
							 Background="{DynamicResource DataBoxBackgroundBrush}" Foreground="{DynamicResource FontBrush}"
							 BorderBrush="{DynamicResource DataBoxBorderBrush}"
							 Text="{Binding Owner}"
							 Classes="dataBox"
							 CornerRadius="5"
							 KeyDown="ConfirmData"/>
				</DockPanel>

				<Border Background="{DynamicResource AdditionalBackgroundBrush}" Margin="25,65,25,40" CornerRadius="20" >
					<StackPanel>
						<TextBlock Text="Card" Foreground="White" Margin="15,10,0,0"/>
						<Separator Margin="0,5,0,0" Background="{DynamicResource DataBoxBorderBrush}"/>
						<DockPanel Margin="15,30,0,0">
							<TextBlock Text="Number" Foreground="White" VerticalAlignment="Center" Width="75"/>
							<TextBox Watermark="Enter number" Margin="15,0,15,0" BorderThickness="1"
									 Background="{DynamicResource DataBoxBackgroundBrush}" Foreground="{DynamicResource FontBrush}"
									 BorderBrush="{DynamicResource DataBoxBorderBrush}"
									 Text="{Binding Number}"
									 Classes="dataBox"
									 HorizontalContentAlignment="Left" CornerRadius="15"
									 KeyDown="ConfirmData"/>
						</DockPanel>
						<DockPanel Margin="15,20,0,0">
							<TextBlock Text="CVC" Foreground="White" VerticalAlignment="Center" Width="75"/>
							<TextBox Watermark="Enter cvc" Margin="15,0,15,0" BorderThickness="1"
									 Background="{DynamicResource DataBoxBackgroundBrush}" Foreground="{DynamicResource FontBrush}"
									 BorderBrush="{DynamicResource DataBoxBorderBrush}"
									 Text="{Binding Cvc, Converter={StaticResource StringToIntConverter}}"
									 Classes="dataBox" MaxLength="3"
									 HorizontalContentAlignment="Left" CornerRadius="15"
									 KeyDown="Digit_Validation"/>
						</DockPanel>
						<DockPanel Margin="15,20,0,0">
							<ComboBox DockPanel.Dock="Left" PlaceholderText="MM" Margin="100,0,0,0"
									  SelectedIndex="{Binding Month}" SelectionChanged="Month_SelectionChanged"
									  CornerRadius="5" PlaceholderForeground="{DynamicResource SecondFontBrush}">
								<ComboBoxItem Content="1"/>
								<ComboBoxItem Content="2"/>
								<ComboBoxItem Content="3"/>
								<ComboBoxItem Content="4"/>
								<ComboBoxItem Content="5"/>
								<ComboBoxItem Content="6"/>
								<ComboBoxItem Content="7"/>
								<ComboBoxItem Content="9"/>
								<ComboBoxItem Content="9"/>
								<ComboBoxItem Content="10"/>
								<ComboBoxItem Content="11"/>
								<ComboBoxItem Content="12"/>
							</ComboBox>
							<TextBox DockPanel.Dock="Left" Margin="10,0,0,0" Classes="dataBox"
									 CornerRadius="5" Watermark="YYYY" MaxLength="4"
									 Text="{Binding Year, Converter={StaticResource StringToIntConverter}}"
									 KeyDown="Digit_Validation"
									 Background="{DynamicResource DataBoxBackgroundBrush}" 
									 Foreground="{DynamicResource FontBrush}"
									 BorderBrush="{DynamicResource DataBoxBorderBrush}"/>
								
							<TextBlock Text="- year is not valid" Foreground="{DynamicResource WarningBrush}"
									   VerticalAlignment="Center" IsVisible="{Binding !IsValidYear}"/>		
						</DockPanel>
						
					</StackPanel>

				</Border>
				<TextBlock Text="all fields must be filled in" FontSize="12"
						   Foreground="{DynamicResource WarningBrush}"
						   VerticalAlignment="Bottom" HorizontalAlignment="Right"
						   Margin="0,0,30,25" IsVisible="{Binding !CanClose}"/>
			</Grid>
			<Grid Background="{DynamicResource AdditionalBackgroundBrush}" Grid.Row="2"
				  ColumnDefinitions="*,100,100">
				<Button Theme="{StaticResource CancelButton}" Grid.Column="2"
						Margin="15,10" Command="{Binding CloseCommand}"/>
				<Button Theme="{StaticResource ConfirmButton}" Grid.Column="1"
						Margin="30,10,0,10" IsEnabled="{Binding CanClose}"
						Command="{Binding AddCommand}"/>
			</Grid>



		</Grid>
	</Border>
</UserControl>
